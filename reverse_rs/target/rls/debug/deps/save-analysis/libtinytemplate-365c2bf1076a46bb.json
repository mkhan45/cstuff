{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50],"program":"/home/fish/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tinytemplate","/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=365c2bf1076a46bb","-C","extra-filename=-365c2bf1076a46bb","--out-dir","/home/fish/cstuff/reverse_rs/target/rls/debug/deps","-L","dependency=/home/fish/cstuff/reverse_rs/target/rls/debug/deps","--extern","serde=/home/fish/cstuff/reverse_rs/target/rls/debug/deps/libserde-a995ae4cc8550658.rmeta","--extern","serde_json=/home/fish/cstuff/reverse_rs/target/rls/debug/deps/libserde_json-ff1ebe0cb4381fe1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/fish/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,102,105,115,104,47,99,115,116,117,102,102,47,114,101,118,101,114,115,101,95,114,115,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,116,105,110,121,116,101,109,112,108,97,116,101,45,51,54,53,99,50,98,102,49,48,55,54,97,52,54,98,98,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"tinytemplate","disambiguator":[5967125411300970525,9777158720429598715]},"crate_root":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src","external_crates":[{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13207157035321610514,1601512537482633728]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7623312343418098386,5842227285171027081]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15062483144693841030,3160817630090790886]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[436745421963593417,1808485874600938246]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14785001670989826495,12996925471203689162]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9965434524793337566,8042345761937100773]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[15482981957725683232,16126164733460801089]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[12401856028840807657,14789254441426287527]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[13858858106744831426,15797026455235720829]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[7931781289263694084,224457116430056702]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/lib.rs","num":11,"id":{"name":"serde","disambiguator":[4123913605178990712,2548663000725449637]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/lib.rs","num":12,"id":{"name":"serde_json","disambiguator":[10840491004145481425,5002977639721060730]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/lib.rs","num":13,"id":{"name":"itoa","disambiguator":[12007538452035956989,15804599189919697299]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/lib.rs","num":14,"id":{"name":"ryu","disambiguator":[7140575970872352423,12610807478909003746]}}],"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":7298,"line_start":1,"line_end":219,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":7298,"line_start":1,"line_end":219,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":70},{"krate":0,"index":122},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":212}],"decl_id":null,"docs":" ## TinyTemplate","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":70},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/error.rs","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":86},{"krate":0,"index":90},{"krate":0,"index":94},{"krate":0,"index":98},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120}],"decl_id":null,"docs":" Module containing the error type returned by TinyTemplate if an error occurs.\n","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":119},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33751,"byte_end":33761,"line_start":12,"line_end":12,"column_start":5,"column_end":15},"name":"ParseError","qualname":"::error::Error::ParseError","value":"Error::ParseError { msg, line, column }","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":127},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33845,"byte_end":33856,"line_start":17,"line_end":17,"column_start":5,"column_end":16},"name":"RenderError","qualname":"::error::Error::RenderError","value":"Error::RenderError { msg, line, column }","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":135},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33940,"byte_end":33950,"line_start":22,"line_end":22,"column_start":5,"column_end":15},"name":"SerdeError","qualname":"::error::Error::SerdeError","value":"Error::SerdeError { err }","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":139},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33996,"byte_end":34008,"line_start":25,"line_end":25,"column_start":5,"column_end":17},"name":"GenericError","qualname":"::error::Error::GenericError","value":"Error::GenericError { msg }","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":143},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34046,"byte_end":34060,"line_start":28,"line_end":28,"column_start":5,"column_end":19},"name":"StdFormatError","qualname":"::error::Error::StdFormatError","value":"Error::StdFormatError { err }","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":147},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34102,"byte_end":34121,"line_start":31,"line_end":31,"column_start":5,"column_end":24},"name":"CalledTemplateError","qualname":"::error::Error::CalledTemplateError","value":"Error::CalledTemplateError { name, err, line, column }","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":157},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34232,"byte_end":34252,"line_start":37,"line_end":37,"column_start":5,"column_end":25},"name":"CalledFormatterError","qualname":"::error::Error::CalledFormatterError","value":"Error::CalledFormatterError { name, err, line, column }","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":167},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34385,"byte_end":34400,"line_start":45,"line_end":45,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::Error::__NonExhaustive","value":"Error::__NonExhaustive","parent":{"krate":0,"index":216},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":216},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":33738,"byte_end":33743,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{ParseError, RenderError, SerdeError, GenericError, StdFormatError, CalledTemplateError, CalledFormatterError, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":127},{"krate":0,"index":135},{"krate":0,"index":139},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":157},{"krate":0,"index":167}],"decl_id":null,"docs":" Enum representing the potential errors that TinyTemplate can encounter.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":102},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":36620,"byte_end":36626,"line_start":98,"line_end":98,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":130},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,115,121,110,116,97,120,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"syntax","qualname":"::syntax","value":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/tinytemplate-1.0.2/src/syntax.rs","parent":null,"children":[],"decl_id":null,"docs":" Documentation of TinyTemplate's template syntax.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":192},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2562,"byte_end":2576,"line_start":86,"line_end":86,"column_start":10,"column_end":24},"name":"ValueFormatter","qualname":"::ValueFormatter","value":"Fn(&Value, &mut String) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Type alias for closures which can be used as value formatters.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":194},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2700,"byte_end":2706,"line_start":89,"line_end":89,"column_start":8,"column_end":14},"name":"escape","qualname":"::escape","value":"fn (value: &str, output: &mut String) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Appends `value` to `output`, performing HTML-escaping in the process.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":196},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4084,"byte_end":4090,"line_start":127,"line_end":127,"column_start":8,"column_end":14},"name":"format","qualname":"::format","value":"fn (value: &Value, output: &mut String) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" The format function is used as the default value formatter for all values unless the user\n specifies another. It is provided publicly so that it can be called as part of custom formatters.\n Values are formatted as follows:","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":198},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4622,"byte_end":4638,"line_start":147,"line_end":147,"column_start":8,"column_end":24},"name":"format_unescaped","qualname":"::format_unescaped","value":"fn (value: &Value, output: &mut String) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Identical to [`format`](fn.format.html) except that this does not perform HTML escaping.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":200},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5309,"byte_end":5321,"line_start":169,"line_end":169,"column_start":12,"column_end":24},"name":"TinyTemplate","qualname":"::TinyTemplate","value":"TinyTemplate {  }","parent":null,"children":[{"krate":0,"index":107},{"krate":0,"index":109}],"decl_id":null,"docs":" The TinyTemplate struct is the entry point for the TinyTemplate library. It contains the\n template and formatter registries and provides functions to render templates as well as to\n register templates and formatters.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5710,"byte_end":5713,"line_start":176,"line_end":176,"column_start":12,"column_end":15},"name":"new","qualname":"<TinyTemplate>::new","value":"fn () -> TinyTemplate<'template>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TinyTemplate registry. The returned registry contains no templates, and has\n [`format_unescaped`](fn.format_unescaped.html) registered as a formatter named \"unescaped\".\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6050,"byte_end":6062,"line_start":186,"line_end":186,"column_start":12,"column_end":24},"name":"add_template","qualname":"<TinyTemplate>::add_template","value":"fn (&mut self, name: &'template str, text: &'template str) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Parse and compile the given template, then register it under the given name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6331,"byte_end":6344,"line_start":193,"line_end":193,"column_start":12,"column_end":25},"name":"add_formatter","qualname":"<TinyTemplate>::add_formatter","value":"fn <F> (&mut self, name: &'template str, formatter: F) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Register the given formatter function under the given name.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6737,"byte_end":6743,"line_start":202,"line_end":202,"column_start":12,"column_end":18},"name":"render","qualname":"<TinyTemplate>::render","value":"fn <C> (&self, template: &str, context: &C) -> Result<String>","parent":null,"children":[],"decl_id":null,"docs":" Render the template with the given name using the given context object. The context\n object must implement `serde::Serialize` as it will be converted to `serde_json::Value`.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,99,111,109,112,105,108,101,114,46,114,115],"byte_start":9074,"byte_end":9090,"line_start":39,"line_end":39,"column_start":17,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34436,"byte_end":34441,"line_start":47,"line_end":47,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34561,"byte_end":34566,"line_start":52,"line_end":52,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":92}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34682,"byte_end":34687,"line_start":57,"line_end":57,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":36037,"byte_end":36042,"line_start":83,"line_end":83,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,116,101,109,112,108,97,116,101,46,114,115],"byte_start":51006,"byte_end":51019,"line_start":40,"line_end":40,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,116,101,109,112,108,97,116,101,46,114,115],"byte_start":53408,"byte_end":53416,"line_start":97,"line_end":97,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5476,"byte_end":5488,"line_start":173,"line_end":173,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7191,"byte_end":7203,"line_start":215,"line_end":215,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2295,"byte_end":2300,"line_start":73,"line_end":73,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":70}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2327,"byte_end":2333,"line_start":75,"line_end":75,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":130}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,99,111,109,112,105,108,101,114,46,114,115],"byte_start":9074,"byte_end":9090,"line_start":39,"line_end":39,"column_start":17,"column_end":33},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":34},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34436,"byte_end":34441,"line_start":47,"line_end":47,"column_start":31,"column_end":36},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":216},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34561,"byte_end":34566,"line_start":52,"line_end":52,"column_start":27,"column_end":32},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":216},"to":{"krate":2,"index":2656}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":34682,"byte_end":34687,"line_start":57,"line_end":57,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":216},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":36037,"byte_end":36042,"line_start":83,"line_end":83,"column_start":19,"column_end":24},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":216},"to":{"krate":1,"index":2470}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,116,101,109,112,108,97,116,101,46,114,115],"byte_start":51006,"byte_end":51019,"line_start":40,"line_end":40,"column_start":26,"column_end":39},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,116,101,109,112,108,97,116,101,46,114,115],"byte_start":53408,"byte_end":53416,"line_start":97,"line_end":97,"column_start":17,"column_end":25},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":170},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5476,"byte_end":5488,"line_start":173,"line_end":173,"column_start":17,"column_end":29},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":200},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,116,105,110,121,116,101,109,112,108,97,116,101,45,49,46,48,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7191,"byte_end":7203,"line_start":215,"line_end":215,"column_start":29,"column_end":41},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":200},"to":{"krate":2,"index":2632}}]}