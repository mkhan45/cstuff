{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.2","compilation":{"directory":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56],"program":"/home/fish/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","walkdir","/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.8/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=2b9f0091862e6ae0","-C","extra-filename=-2b9f0091862e6ae0","--out-dir","/home/fish/cstuff/reverse_rs/target/rls/debug/deps","-L","dependency=/home/fish/cstuff/reverse_rs/target/rls/debug/deps","--extern","same_file=/home/fish/cstuff/reverse_rs/target/rls/debug/deps/libsame_file-1cc23bddae37b4e1.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/fish/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,102,105,115,104,47,99,115,116,117,102,102,47,114,101,118,101,114,115,101,95,114,115,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,119,97,108,107,100,105,114,45,50,98,57,102,48,48,57,49,56,54,50,101,54,97,101,48,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"walkdir","disambiguator":[4837801908173822957,3442866197659919121]},"crate_root":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.8/src","external_crates":[{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.8/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[13207157035321610514,1601512537482633728]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.8/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[7623312343418098386,5842227285171027081]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.8/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[15062483144693841030,3160817630090790886]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.8/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[436745421963593417,1808485874600938246]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.8/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14785001670989826495,12996925471203689162]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.8/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9965434524793337566,8042345761937100773]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.8/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[15482981957725683232,16126164733460801089]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.8/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[12401856028840807657,14789254441426287527]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.8/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[13858858106744831426,15797026455235720829]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.8/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[7931781289263694084,224457116430056702]}},{"file_name":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.8/src/lib.rs","num":11,"id":{"name":"same_file","disambiguator":[8771151612226233947,415824686899270193]}}],"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":60477,"line_start":1,"line_end":1725,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":48},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3380,"byte_end":3391,"line_start":138,"line_end":138,"column_start":15,"column_end":26},"alias_span":null,"name":"DirEntryExt","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":60477,"line_start":1,"line_end":1725,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/fish/.cargo/registry/src/github.com-1ecc6299db9ec823/walkdir-2.2.8/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":14},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":66},{"krate":0,"index":84},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":92},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":106},{"krate":0,"index":128},{"krate":0,"index":132},{"krate":0,"index":138},{"krate":0,"index":166},{"krate":0,"index":170},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":174},{"krate":0,"index":180},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":186},{"krate":0,"index":204},{"krate":0,"index":210},{"krate":0,"index":214},{"krate":0,"index":218}],"decl_id":null,"docs":"Crate `walkdir` provides an efficient and cross platform implementation\nof recursive directory traversal. Several options are exposed to control\niteration, such as whether to follow symbolic links (default off), limit the\nmaximum number of simultaneous open file descriptors and the ability to\nefficiently skip descending into directories.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2810,"byte_end":2832,"line_start":106,"line_end":106,"column_start":1,"column_end":23}},{"value":"allow(bare_trait_objects)","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2833,"byte_end":2862,"line_start":107,"line_end":107,"column_start":1,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":48},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,117,110,105,120,46,114,115],"byte_start":60564,"byte_end":60575,"line_start":4,"line_end":4,"column_start":11,"column_end":22},"name":"DirEntryExt","qualname":"::unix::DirEntryExt","value":"DirEntryExt","parent":null,"children":[{"krate":0,"index":50}],"decl_id":null,"docs":" Unix-specific extension methods for `walkdir::DirEntry`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,117,110,105,120,46,114,115],"byte_start":60675,"byte_end":60678,"line_start":7,"line_end":7,"column_start":8,"column_end":11},"name":"ino","qualname":"::unix::DirEntryExt::ino","value":"fn (&self) -> u64","parent":{"krate":0,"index":48},"children":[],"decl_id":null,"docs":" Returns the underlying `d_ino` field in the contained `dirent`\n structure.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":58},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4411,"byte_end":4417,"line_start":168,"line_end":168,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"::std::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A result type for walkdir operations.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":222},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7430,"byte_end":7437,"line_start":245,"line_end":245,"column_start":12,"column_end":19},"name":"WalkDir","qualname":"::WalkDir","value":"WalkDir {  }","parent":null,"children":[{"krate":0,"index":89},{"krate":0,"index":91}],"decl_id":null,"docs":" A builder to create an iterator for recursively walking a directory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":68},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8995,"byte_end":8998,"line_start":290,"line_end":290,"column_start":12,"column_end":15},"name":"new","qualname":"<WalkDir>::new","value":"fn <P> (root: P) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a builder for a recursive directory iterator starting at the\n file path `root`. If `root` is a directory, then it is the first item\n yielded by the iterator. If `root` is a file, then it is the first\n and only item yielded by the iterator. If `root` is a symlink, then it\n is always followed for the purposes of directory traversal. (A root\n `DirEntry` still obeys its documentation with respect to symlinks and\n the `follow_links` setting.)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9719,"byte_end":9728,"line_start":310,"line_end":310,"column_start":12,"column_end":21},"name":"min_depth","qualname":"<WalkDir>::min_depth","value":"fn (mut self, depth: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the minimum depth of entries yielded by the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10420,"byte_end":10429,"line_start":327,"line_end":327,"column_start":12,"column_end":21},"name":"max_depth","qualname":"<WalkDir>::max_depth","value":"fn (mut self, depth: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum depth of entries yield by the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11163,"byte_end":11175,"line_start":346,"line_end":346,"column_start":12,"column_end":24},"name":"follow_links","qualname":"<WalkDir>::follow_links","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Follow symbolic links. By default, this is disabled.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12602,"byte_end":12610,"line_start":376,"line_end":376,"column_start":12,"column_end":20},"name":"max_open","qualname":"<WalkDir>::max_open","value":"fn (mut self, mut n: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the maximum number of simultaneously open file descriptors used\n by the iterator.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13227,"byte_end":13234,"line_start":397,"line_end":397,"column_start":12,"column_end":19},"name":"sort_by","qualname":"<WalkDir>::sort_by","value":"fn <F> (mut self, cmp: F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set a function for sorting directory entries.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14992,"byte_end":15006,"line_start":461,"line_end":461,"column_start":12,"column_end":26},"name":"contents_first","qualname":"<WalkDir>::contents_first","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Yield a directory's contents before the directory itself. By default,\n this is disabled.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15552,"byte_end":15568,"line_start":474,"line_end":474,"column_start":12,"column_end":28},"name":"same_file_system","qualname":"<WalkDir>::same_file_system","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Do not cross file system boundaries.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":228},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16655,"byte_end":16663,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":107}],"decl_id":null,"docs":" An iterator for recursively descending into a directory.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":98},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22357,"byte_end":22365,"line_start":652,"line_end":652,"column_start":12,"column_end":20},"name":"DirEntry","qualname":"::DirEntry","value":"DirEntry {  }","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":41},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":47}],"decl_id":null,"docs":" A directory entry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27062,"byte_end":27078,"line_start":779,"line_end":779,"column_start":12,"column_end":28},"name":"skip_current_dir","qualname":"<IntoIter>::skip_current_dir","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Skips the current directory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":29133,"byte_end":29145,"line_start":834,"line_end":834,"column_start":12,"column_end":24},"name":"filter_entry","qualname":"<IntoIter>::filter_entry","value":"fn <P> (self, predicate: P) -> FilterEntry<Self, P>","parent":null,"children":[],"decl_id":null,"docs":" Yields only entries which satisfy the given predicate and skips\n descending into directories that do not satisfy the given predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37220,"byte_end":37224,"line_start":1042,"line_end":1042,"column_start":12,"column_end":16},"name":"path","qualname":"<DirEntry>::path","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" The full path that this entry represents.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":37461,"byte_end":37470,"line_start":1051,"line_end":1051,"column_start":12,"column_end":21},"name":"into_path","qualname":"<DirEntry>::into_path","value":"fn (self) -> PathBuf","parent":null,"children":[],"decl_id":null,"docs":" The full path that this entry represents.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":38091,"byte_end":38106,"line_start":1065,"line_end":1065,"column_start":12,"column_end":27},"name":"path_is_symlink","qualname":"<DirEntry>::path_is_symlink","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if and only if this entry was created from a symbolic\n link. This is unaffected by the [`follow_links`] setting.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":39125,"byte_end":39133,"line_start":1091,"line_end":1091,"column_start":12,"column_end":20},"name":"metadata","qualname":"<DirEntry>::metadata","value":"fn (&self) -> Result<fs::Metadata>","parent":null,"children":[],"decl_id":null,"docs":" Return the metadata for the file that this entry points to.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":40071,"byte_end":40080,"line_start":1121,"line_end":1121,"column_start":12,"column_end":21},"name":"file_type","qualname":"<DirEntry>::file_type","value":"fn (&self) -> fs::FileType","parent":null,"children":[],"decl_id":null,"docs":" Return the file type for the file that this entry points to.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":40284,"byte_end":40293,"line_start":1129,"line_end":1129,"column_start":12,"column_end":21},"name":"file_name","qualname":"<DirEntry>::file_name","value":"fn (&self) -> &OsStr","parent":null,"children":[],"decl_id":null,"docs":" Return the file name of this entry.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":40705,"byte_end":40710,"line_start":1138,"line_end":1138,"column_start":12,"column_end":17},"name":"depth","qualname":"<DirEntry>::depth","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the depth at which this entry was created relative to the root.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":246},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46515,"byte_end":46526,"line_start":1333,"line_end":1333,"column_start":12,"column_end":23},"name":"FilterEntry","qualname":"::FilterEntry","value":"FilterEntry {  }","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":129}],"decl_id":null,"docs":" A recursive directory iterator that skips entries.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":49306,"byte_end":49318,"line_start":1413,"line_end":1413,"column_start":12,"column_end":24},"name":"filter_entry","qualname":"<FilterEntry<IntoIter, P>>::filter_entry","value":"fn (self, predicate: P) -> FilterEntry<Self, P>","parent":null,"children":[],"decl_id":null,"docs":" Yields only entries which satisfy the given predicate and skips\n descending into directories that do not satisfy the given predicate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":50993,"byte_end":51009,"line_start":1460,"line_end":1460,"column_start":12,"column_end":28},"name":"skip_current_dir","qualname":"<FilterEntry<IntoIter, P>>::skip_current_dir","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Skips the current directory.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":252},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":52068,"byte_end":52073,"line_start":1485,"line_end":1485,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":137}],"decl_id":null,"docs":" An error produced by recursively walking a directory.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":52600,"byte_end":52604,"line_start":1503,"line_end":1503,"column_start":12,"column_end":16},"name":"path","qualname":"<Error>::path","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path associated with this error if one exists.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":53350,"byte_end":53363,"line_start":1523,"line_end":1523,"column_start":12,"column_end":25},"name":"loop_ancestor","qualname":"<Error>::loop_ancestor","value":"fn (&self) -> Option<&Path>","parent":null,"children":[],"decl_id":null,"docs":" Returns the path at which a cycle was detected.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":53938,"byte_end":53943,"line_start":1538,"line_end":1538,"column_start":12,"column_end":17},"name":"depth","qualname":"<Error>::depth","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the depth at which this error occurred relative to the root.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":56496,"byte_end":56504,"line_start":1600,"line_end":1600,"column_start":12,"column_end":20},"name":"io_error","qualname":"<Error>::io_error","value":"fn (&self) -> Option<&io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Inspect the original [`io::Error`] if there is one.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":56953,"byte_end":56966,"line_start":1612,"line_end":1612,"column_start":12,"column_end":25},"name":"into_io_error","qualname":"<Error>::into_io_error","value":"fn (self) -> Option<io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Similar to [`io_error`] except consumes self to convert to the original\n [`io::Error`] if one exists.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,117,110,105,120,46,114,115],"byte_start":60718,"byte_end":60726,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":54}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7781,"byte_end":7795,"line_start":262,"line_end":262,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8475,"byte_end":8482,"line_start":282,"line_end":282,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":70},{"krate":0,"index":72},{"krate":0,"index":74},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15686,"byte_end":15693,"line_start":480,"line_end":480,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19015,"byte_end":19023,"line_start":566,"line_end":566,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23399,"byte_end":23407,"line_start":678,"line_end":678,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":102},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25485,"byte_end":25493,"line_start":735,"line_end":735,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35638,"byte_end":35645,"line_start":1000,"line_end":1000,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35834,"byte_end":35841,"line_start":1008,"line_end":1008,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36406,"byte_end":36414,"line_start":1026,"line_end":1026,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":162}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44594,"byte_end":44602,"line_start":1271,"line_end":1271,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":168}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":45390,"byte_end":45398,"line_start":1305,"line_end":1305,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":172}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46588,"byte_end":46599,"line_start":1338,"line_end":1338,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":176},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":47383,"byte_end":47394,"line_start":1366,"line_end":1366,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":52261,"byte_end":52266,"line_start":1496,"line_end":1496,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":57784,"byte_end":57789,"line_start":1644,"line_end":1644,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":58219,"byte_end":58224,"line_start":1660,"line_end":1660,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":58886,"byte_end":58891,"line_start":1679,"line_end":1679,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,117,110,105,120,46,114,115],"byte_start":60718,"byte_end":60726,"line_start":10,"line_end":10,"column_start":22,"column_end":30},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":98},"to":{"krate":0,"index":48}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7781,"byte_end":7795,"line_start":262,"line_end":262,"column_start":21,"column_end":35},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":60},"to":{"krate":2,"index":8426}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8475,"byte_end":8482,"line_start":282,"line_end":282,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15686,"byte_end":15693,"line_start":480,"line_end":480,"column_start":23,"column_end":30},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":222},"to":{"krate":2,"index":4494}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19015,"byte_end":19023,"line_start":566,"line_end":566,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":234},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23399,"byte_end":23407,"line_start":678,"line_end":678,"column_start":19,"column_end":27},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":228},"to":{"krate":2,"index":4316}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25485,"byte_end":25493,"line_start":735,"line_end":735,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":228},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35638,"byte_end":35645,"line_start":1000,"line_end":1000,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35834,"byte_end":35841,"line_start":1008,"line_end":1008,"column_start":19,"column_end":26},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":240},"to":{"krate":2,"index":4316}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":36406,"byte_end":36414,"line_start":1026,"line_end":1026,"column_start":6,"column_end":14},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":98},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":44594,"byte_end":44602,"line_start":1271,"line_end":1271,"column_start":16,"column_end":24},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":98},"to":{"krate":2,"index":2598}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":45390,"byte_end":45398,"line_start":1305,"line_end":1305,"column_start":21,"column_end":29},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":98},"to":{"krate":2,"index":8426}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":46588,"byte_end":46599,"line_start":1338,"line_end":1338,"column_start":22,"column_end":33},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":246},"to":{"krate":2,"index":4316}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":47383,"byte_end":47394,"line_start":1366,"line_end":1366,"column_start":9,"column_end":20},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":246},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":52261,"byte_end":52266,"line_start":1496,"line_end":1496,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":252},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":57784,"byte_end":57789,"line_start":1644,"line_end":1644,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":252},"to":{"krate":1,"index":2470}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":58219,"byte_end":58224,"line_start":1660,"line_end":1660,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":252},"to":{"krate":2,"index":8430}},{"span":{"file_name":[47,104,111,109,101,47,102,105,115,104,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,119,97,108,107,100,105,114,45,50,46,50,46,56,47,115,114,99,47,108,105,98,46,114,115],"byte_start":58886,"byte_end":58891,"line_start":1679,"line_end":1679,"column_start":26,"column_end":31},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":1,"index":3884},"to":{"krate":2,"index":2656}}]}